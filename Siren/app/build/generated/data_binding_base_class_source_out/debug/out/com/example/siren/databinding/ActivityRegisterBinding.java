// Generated by view binder compiler. Do not edit!
package com.example.siren.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.siren.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnLogin;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final TextInputLayout tiEmail;

  @NonNull
  public final TextInputLayout tiName;

  @NonNull
  public final TextInputLayout tiPassword;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull TextView btnLogin,
      @NonNull Button btnRegister, @NonNull EditText etEmail, @NonNull EditText etName,
      @NonNull EditText etPassword, @NonNull TextInputLayout tiEmail,
      @NonNull TextInputLayout tiName, @NonNull TextInputLayout tiPassword) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnRegister = btnRegister;
    this.etEmail = etEmail;
    this.etName = etName;
    this.etPassword = etPassword;
    this.tiEmail = tiEmail;
    this.tiName = tiName;
    this.tiPassword = tiPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      TextView btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etName;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.tiEmail;
      TextInputLayout tiEmail = ViewBindings.findChildViewById(rootView, id);
      if (tiEmail == null) {
        break missingId;
      }

      id = R.id.tiName;
      TextInputLayout tiName = ViewBindings.findChildViewById(rootView, id);
      if (tiName == null) {
        break missingId;
      }

      id = R.id.tiPassword;
      TextInputLayout tiPassword = ViewBindings.findChildViewById(rootView, id);
      if (tiPassword == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, btnLogin, btnRegister,
          etEmail, etName, etPassword, tiEmail, tiName, tiPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
